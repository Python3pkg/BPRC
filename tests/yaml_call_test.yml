##URL mocked with requests-mock

recipe:
# test bad URLs
  -  # step 0
    URL: blah
  -  # step 1
    URL: ftp://blah
  -  # step 2
    URL: www.hostname.com
  -  # step 3
    URL: 127.0.0.1
  -  # step 4
    URL: blah http://yahoo.com
  -  # step 5
    URL: ftp://blah/blah.txt
  -  # step 6
    URL: index.html
  -  # step 7
    URL: /files/info.html
  -  # step 8
    URL: 192.168.0.1:9000/info.html
# tests missing content-type header, request timeout and retries
  -  # step 9
    URL: http://two.com
    options:
      request.retries: 7
      request.body_format: json
  -  # step 10
    URL: https://two.com
    options:
      request.retries: 1
  -  # step 11 --- test options element with bad options
    URL: http://two.org/
    options:
      junk: should_be ignored
      request.retries: rubbish
  -  # step 12 --- test options element with no options
    URL: http://two.org/
    options:
  -  # step 13 --- test default request-headers passed
    URL: http://this.is.a.url.org/
# HTTP Method tests
  -  # step 14 --- test HTTP methods
    URL: http://this.is.a.url.org/
    httpmethod: POST
  -  # step 15 --- test HTTP methods
    URL: http://this.is.a.url.org/
    httpmethod: GET
  -  # step 16 --- test HTTP methods
    URL: http://this.is.a.url.org/
    httpmethod: DELETE
  -  # step 17 --- test HTTP methods
    URL: http://this.is.a.url.org/
    httpmethod: PUT
  -  # step 18 --- test HTTP methods
    URL: http://this.is.a.url.org/
    httpmethod: PATCH
  -  # step 19 --- test HTTP methods
    URL: http://this.is.a.url.org/
    httpmethod: HEAD
  -  # step 20 --- test HTTP methods
    URL: http://this.is.a.url.org/
    httpmethod: OPTIONS
