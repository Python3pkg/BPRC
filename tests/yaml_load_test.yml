--- #sample recipe
# TODO: @FEATURE add unicode support in the YAML. (120)
# See http://stackoverflow.com/questions/21129020/how-to-fix-unicodedecodeerror-ascii-codec-cant-decode-byte
variables:
  varbool: true
  varint: 7
  varfloat: 0.786
  varstring: Brad's favourite colour
  dummypassword: <%f./tests/dummypassword.txt%>

recipe:
  -  # step0
    name: Create Kong API
    httpmethod: POST
    URL: http://kong:8001/apis
    request:
      body:
        name: Consumer API
        upstream_uri: http://wiremock/blah
        strip_url: false
      headers:
        Authorisation: yadda-step one authorisation header brad
        Content-type: application/json
      querystring:
        keya: vala
        keyb: valb
    response: # set up this response section if you need to pull out data here for use later in the recipe.
      body:
        id: this_is_a_param
      headers:
        Authorisation:
      code:
  -  # step 1
    name: Load OAUTH Plugin
    httpmethod: POST
    URL: http://kong:8001/apdis/<%=steps[0].response.body["id"]%>/<%=steps[0].request.querystring["keya"]%> #gets the JSON field id from the body of the response from step 1.
    request:
      querystring:
        key3: value3
        keysub: <%=steps[0].request.headers["Authorisation"]%>
      body:
        key4: valueprefix <%=steps[0].request.headers["Content-type"]%>
      headers:
        blah: blahbha
        Authorisation: bearer <%=steps[0].request.body["upstream_uri"]%>
    response: # set up this response section if you need to pull out data here for use later in the recipe.
      code:
      body:
      headers:
        Authorisation:
  -  # step 2
    name: Test types
    httpmethod: POST
    URL: ddodgy URL
    options:
      request.retries: 3
      request.body_format: json
    request:
      querystring:
        qsbool0: true
        qsbool1: True
        qsbool2: "true"
        qsbool3: 1
        qsint: 2016
        qsstring: this is a string with some unicode
        qsfloat: 3.14157
      headers:
        headerbool0: true
        headerbool1: True
        headerbool2: "true"
        headerbool3: 1
        headerint: 2016
        headerstring: this is a string with some unicode
        headerfloat: 3.14157
      body:
        bodybool0: true
        bodybool1: True
        bodybool2: "true"
        bodybool3: 1
        bodyint: 2016
        bodystring: this is a string with some unicode
        bodyfloat: 3.14157
  -  # step 3
    URL: http://mockbin.org/
  -  # step 4
    URL: http://mockbin.org/
    options:
      request.retries: ddd
      request.body_format: ddd
  -  # step 5
    URL: http://mockbin.org/
    request:
    response:
  -  # step 6 --- test case-insensitivity for Headers as per RFC
    URL: http://mockbin.org/
    request:
      headers:
        someheader: SoMeVaL ### RFC7230 says Header keys must be case insensitive, but values may not be.
        SoMeHeaDer2: 50
  -  # step 7 --- test file substitution
    URL: http://mockbin.org/
    request:
      headers:
        directfile: <%f./tests/dummypassword.txt%>
        file_from_var: <%!dummypassword%>
        directfile_plus: dummy_password = <%f./tests/dummypassword.txt%>
        file_from_var_plus: dummy_password = <%!dummypassword%>
